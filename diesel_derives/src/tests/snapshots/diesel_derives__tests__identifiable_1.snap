---
source: diesel_derives/src/tests/mod.rs
expression: out
info:
  input: "#[derive(Identifiable)]\nstruct User {\n    id: i32,\n    name: String,\n}\n"
---
const _: () = {
    use diesel;
    impl diesel::associations::HasTable for User {
        type Table = users::table;
        fn table() -> <Self as diesel::associations::HasTable>::Table {
            users::table
        }
    }
    impl<'ident> diesel::associations::Identifiable for &'ident User {
        type Id = (&'ident i32);
        fn id(self) -> <Self as diesel::associations::Identifiable>::Id {
            (&self.id)
        }
    }
    impl<'ident> diesel::associations::Identifiable for &'_ &'ident User {
        type Id = (&'ident i32);
        fn id(self) -> <Self as diesel::associations::Identifiable>::Id {
            (&self.id)
        }
    }
};
